name: Create Release

on:
    workflow_dispatch:
        inputs:
            version_bump:
                description: 'Version bump type'
                required: true
                default: 'patch'
                type: choice
                options:
                    - patch
                    - minor
                    - major
            prerelease:
                description: 'Is this a pre-release?'
                required: false
                default: false
                type: boolean

jobs:
    create-release:
        name: Create Release
        runs-on: ubuntu-latest

        permissions:
            contents: write
            pull-requests: write

        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: '3.11'

            - name: Install bump-my-version
              run: |
                  pip install bump-my-version

            - name: Get current version
              id: current
              run: |
                  echo "version=$(grep -Po '(?<=version = ")[^"]*' pyproject.toml)" >> "$GITHUB_OUTPUT"

            - name: Bump version
              id: bump
              run: |
                  # Configure git
                  git config user.name "github-actions[bot]"
                  git config user.email "github-actions[bot]@users.noreply.github.com"

                  # Bump version (bump-my-version will update all configured files)
                  bump-my-version bump ${{ github.event.inputs.version_bump }} --no-tag --no-commit --verbose

                  # Get new version
                  NEW_VERSION=$(bump-my-version show new_version)
                  echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

                  # Commit changes
                  git add pyproject.toml pinboard_tools/__init__.py
                  git commit -m "chore: bump version from ${{ steps.current.outputs.version }} to $NEW_VERSION"

            - name: Push changes
              run: |
                  git push origin main

            - name: Create Release
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  # Generate release notes
                  PREVIOUS_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
                  if [ -z "$PREVIOUS_TAG" ]; then
                    NOTES="Initial release"
                  else
                    NOTES=$(git log --pretty=format:"- %s" $PREVIOUS_TAG..HEAD | grep -v "^- chore: bump version")
                  fi

                  # Create release
                  gh release create "v${{ steps.bump.outputs.new_version }}" \
                    --title "v${{ steps.bump.outputs.new_version }}" \
                    --notes "$NOTES" \
                    ${{ github.event.inputs.prerelease == 'true' && '--prerelease' || '' }}
