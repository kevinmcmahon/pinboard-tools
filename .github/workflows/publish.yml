# ABOUTME: GitHub Action workflow for automated PyPI publishing
# ABOUTME: Triggers on version tags (vX.X.X) and uses trusted publishing

name: Publish to PyPI

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true
    
    - name: Build package
      run: uv build
    
    - name: Store distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: Publish to PyPI
    needs:
    - build
    runs-on: ubuntu-latest
    
    environment:
      name: pypi
      url: https://pypi.org/p/pinboard-tools
    
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    
    steps:
    - name: Download distribution packages
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Create GitHub Release
    needs:
    - publish-to-pypi
    runs-on: ubuntu-latest
    
    permissions:
      contents: write  # IMPORTANT: required for creating releases
      id-token: write
    
    steps:
    - name: Download distribution packages
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    
    - name: Sign packages with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.0
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        gh release create '${{ github.ref_name }}' \
          --repo '${{ github.repository }}' \
          --notes "Release ${{ github.ref_name }}" \
          --title "Release ${{ github.ref_name }}"
    
    - name: Upload artifacts to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        gh release upload '${{ github.ref_name }}' dist/** \
          --repo '${{ github.repository }}'